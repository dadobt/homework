{
	"info": {
		"_postman_id": "adb9d108-49e2-420d-b2a9-7629ea426e16",
		"name": "PostmanTests",
		"description": "Simple Scenario",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "418a9353-1043-4228-9308-c4d058de0289",
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"username\":\"{{username}}\",\n\t\"password\":\"{{passwrod}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/create",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Authenticate",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "78d64767-1e07-4106-9dca-9c637c04c014",
						"exec": [
							"var json = pm.response.json();",
							"console.log(json);",
							"console.log(json.jwt);",
							"pm.environment.set('jwt_token', json.jwt);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"username\":\"{{username}}\",\n\t\"password\":\"{{passwrod}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/authenticate",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"authenticate"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Message",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "85f5acbb-1e21-4708-9e31-656c2722a29f",
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt_token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"title\":\"A Night at the Opera\",\n\t\"message\":\"Bohemian Rhapsody\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/message",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"message"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get The First Message",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "db8e7de1-5552-4f50-9614-1c83f2ba3078",
						"exec": [
							"var data = pm.response.json();",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"pm.test(\"All Fields Exsist\", function(){",
							"    pm.expect(data.id).not.eql(null);",
							"    pm.expect(data.title).not.eql(null);",
							"    pm.expect(data.message).not.eql(null);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt_token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "localhost:8080/message/1",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"message",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Another Message",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "85f5acbb-1e21-4708-9e31-656c2722a29f",
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"type": "text",
						"value": "Bearer {{jwt_token}}"
					},
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"title\":\"Reggatta de Blanc\",\n\t\"message\":\"message from the bottle\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/message",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"message"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Messages from user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "db8e7de1-5552-4f50-9614-1c83f2ba3078",
						"exec": [
							"var data = pm.response.json();",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"pm.test(\"All Fields Exsist\", function(){",
							"    pm.expect(data.id).not.eql(null);",
							"    pm.expect(data.title).not.eql(null);",
							"    pm.expect(data.message).not.eql(null);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt_token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "localhost:8080/message/user/{{username}}",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"message",
						"user",
						"{{username}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete the First Message",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "db8e7de1-5552-4f50-9614-1c83f2ba3078",
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"type": "text",
						"value": "Bearer {{jwt_token}}"
					},
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "localhost:8080/message/1",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"message",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Patch the second messgae",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "85f5acbb-1e21-4708-9e31-656c2722a29f",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Authorization",
						"type": "text",
						"value": "Bearer {{jwt_token}}"
					},
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"title\":\"test title\",\n\t\"message\":\"this is from patch\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/message/2",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"message",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All ",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "db8e7de1-5552-4f50-9614-1c83f2ba3078",
						"exec": [
							"var data = pm.response.json();",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"pm.test(\"All Fields Exsist\", function(){",
							"    pm.expect(data.id).not.eql(null);",
							"    pm.expect(data.title).not.eql(null);",
							"    pm.expect(data.message).not.eql(null);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt_token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "localhost:8080/message/all",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"message",
						"all"
					]
				}
			},
			"response": []
		},
		{
			"name": "Try to Delete the First Message Again",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "db8e7de1-5552-4f50-9614-1c83f2ba3078",
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"type": "text",
						"value": "Bearer {{jwt_token}}"
					},
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "localhost:8080/message/1",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"message",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Try to Patch Message that not exsist",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "85f5acbb-1e21-4708-9e31-656c2722a29f",
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Authorization",
						"type": "text",
						"value": "Bearer {{jwt_token}}"
					},
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"title\":\"test title\",\n\t\"message\":\"this is from patch\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/message/1",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"message",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All  Again",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "db8e7de1-5552-4f50-9614-1c83f2ba3078",
						"exec": [
							"var data = pm.response.json();",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"pm.test(\"All Fields Exsist\", function(){",
							"    pm.expect(data.id).not.eql(null);",
							"    pm.expect(data.title).not.eql(null);",
							"    pm.expect(data.message).not.eql(null);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt_token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "localhost:8080/message/all",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"message",
						"all"
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}